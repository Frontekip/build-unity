#!/usr/bin/env node

/*
 * Manual Command Lines
 * XXX: https://docs.unity3d.com/Manual/CommandLineArguments.html
 */

const arg = require('arg');

const UnityCliExec = require("unity-cli-exec");
const UnityCliUtils = require("unity-cli-utils");

const args = arg(UnityCliUtils.ARGS, UnityCliUtils.ARGS_OPTIONS);

// Make sure commands gracefully respect termination signals (e.g. from Docker)
process.on('SIGTERM', () => process.exit(0));
process.on('SIGINT', () => process.exit(0));


if (args['--help']) {
    console.log(`
      Usage
        $ unity <command>
      Options
        --build, Build platform name <macos|windows>
        --version, Unity build version
    `);
}


(() => {
    const unityVersion = args["--version"];
    const os = args["--build"];

    const BUILDS = {
        macos() {

            return console.log(UnityCliUtils.buildCommand("macos", unityVersion));


            return UnityCliExec.cmd("Building MacOS", UnityCliUtils.buildCommand("macos", unityVersion), () => process.exit(0));
        },

        windows() {
            return UnityCliExec.cmd("Building Windows", UnityCliUtils.buildCommand("windows", unityVersion), () => process.exit(0));
        }
    };

    if (!os) {

        return console.log(`
Please use 

    --build=windows|macos
        `);
    }


    if (!unityVersion) {
        return console.log(`
Please use:

    --version=<unity-version>
        `);
    }

    // run build
    return BUILDS[os]();
})();

